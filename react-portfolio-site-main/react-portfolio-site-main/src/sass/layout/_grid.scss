.row {
  max-width: $grid-width;
  //   background-color: #eee;
  margin: 0 auto; /* center a block element inside of another block element */

  &:not(:last-child) {
    /* everything except last child */
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;

  [class^="col-"] {
    /* select all class attributes that start '^' with col */ /* '*' means contain, '$' ends with */
    // background-color: slateblue;
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }
  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-1-of-3-card {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    &:nth-child(3n) {
      /* this applies to every third card that flows in from FeatureCard */
      margin-right: 0;
      margin-bottom: $gutter-vertical;
    }
  }

  .col-2-of-3 {
    width: calc(
      2 * (100% - 2 * #{$gutter-horizontal}) / 3 + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * (100% - 3 * #{$gutter-horizontal}) / 4 + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * (100% - 3 * #{$gutter-horizontal}) / 4 + 2 * #{$gutter-horizontal}
    );
  }
}

/* grid styles */

.container {
  max-width: $grid-width;
  margin: 0 auto;
  display: flex;

  &:not(:last-child) {
    /* everything except last child */
    margin-bottom: $gutter-vertical;
  }
}

$columns: 12; // number of columns in the grid system

.col {
  background-color: pink;
  border: LavenderBlush 2px solid;
  border-radius: 8px;
  padding: 16px;
}

@for $width from 1 through $columns {
  .col-#{$width} {
    flex-basis: $width / $columns * 100%;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }
}
